{"version":3,"sources":["wrappedDocumentLoader.js","GreetingCardFromData/GreetingCardFromData.js","MakeCard/MakeCard.js","GreetingCardFromURL/GreetingCardFromURL.js","utils.js","App.js","serviceWorker.js","index.js"],"names":["documentLoader","process","versions","node","window","self","jsonld","documentLoaders","xhr","wrappedDocumentLoader","args","url","a","console","log","GreetingCardFromData","greetingCard","this","props","className","style","backgroundImage","image","from","to","message","React","Component","Ed25519KeyPair","require","jsigs","vc","Ed25519Signature2018","suites","keyToDidDoc","driver","defaultImage","MakeCard","state","issuerVerificationMethod","toDID","publicKeyBase58","privateKeyBase58","convertCardToVC","keyPair","didDoc","suite","id","key","credential","type","issuer","issuanceDate","Date","toISOString","credentialSubject","issue","signedVC","asString","JSON","stringify","asEncoded","base64url","encode","asUrl","location","href","generate","setState","Fragment","value","onChange","event","target","onClick","GreetingCardFromURL","decoded","parse","decode","queryString","search","vcgc","filename","text","element","document","createElement","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","download","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74eb009d.chunk.js","sourcesContent":["import jsonld from \"jsonld\";\n\nconst _nodejs =\n  // tslint:disable-next-line\n  typeof process !== \"undefined\" && process.versions && process.versions.node;\nconst _browser =\n  // tslint:disable-next-line\n  // eslint-disable-next-line\n  !_nodejs && (typeof window !== \"undefined\" || typeof self !== \"undefined\");\n\nconst documentLoader = _browser\n  ? jsonld.documentLoaders.xhr()\n  : jsonld.documentLoaders.node();\n\nconst wrappedDocumentLoader = args => {\n  return async url => {\n    console.log(\"wrappedDocumentLoader...\", url);\n    return documentLoader(url);\n  };\n};\n\nexport default wrappedDocumentLoader;\n","import React from \"react\";\n\nclass GreetingCardFromData extends React.Component {\n  render() {\n    const { greetingCard } = this.props;\n    return (\n      <div\n        className=\"vc-greeting-card-wrapper\"\n        style={{\n          backgroundImage: `url(\"${greetingCard.image}\")`\n        }}\n      >\n        <div className=\"vc-greeting-card-header\">\n          <h3>\n            <span className=\"vc-greeting-card-label\">From: </span>\n            {greetingCard.from}\n          </h3>\n          <h3>\n            <span className=\"vc-greeting-card-label\">To: </span>\n            {greetingCard.to}\n          </h3>\n          <h3>\n            <span className=\"vc-greeting-card-label\">Message: </span>\n            {greetingCard.message}\n          </h3>\n        </div>\n      </div>\n    );\n  }\n}\nexport default GreetingCardFromData;\n","import React from \"react\";\nimport base64url from \"base64url\";\nimport wrappedDocumentLoader from \"../wrappedDocumentLoader\";\n\nimport GreetingCardFromData from \"../GreetingCardFromData/GreetingCardFromData\";\n\nconst { Ed25519KeyPair } = require(\"crypto-ld\");\nconst jsigs = require(\"jsonld-signatures\");\nconst vc = require(\"vc-js\");\nconst { Ed25519Signature2018 } = jsigs.suites;\nconst { keyToDidDoc } = require(\"did-method-key\").driver();\n\nconst defaultImage = \"http://i.imgur.com/SxtVfyQ.jpg\";\n\nclass MakeCard extends React.Component {\n  state = {\n    issuerVerificationMethod: \"\",\n    toDID: \"did:example:123\",\n    publicKeyBase58: \"\",\n    privateKeyBase58: \"\",\n    message: \"Happy Holidays!\",\n    backgroundImage: defaultImage\n  };\n\n  async componentDidMount() {\n    const keyPair = await Ed25519KeyPair.generate();\n    const didDoc = keyToDidDoc(keyPair);\n    this.setState({\n      issuerVerificationMethod: didDoc.id,\n      publicKeyBase58: keyPair.publicKeyBase58,\n      privateKeyBase58: keyPair.privateKeyBase58\n    });\n  }\n\n  convertCardToVC = async () => {\n    const keyPair = new Ed25519KeyPair({\n      publicKeyBase58: this.state.publicKeyBase58,\n      privateKeyBase58: this.state.privateKeyBase58\n    });\n    const didDoc = keyToDidDoc(keyPair);\n    const suite = new Ed25519Signature2018({\n      issuerVerificationMethod: didDoc.id,\n      key: keyPair\n    });\n\n    const credential = {\n      \"@context\": [\n        \"https://www.w3.org/2018/credentials/v1\",\n        \"https://transmute-industries.github.io/vc-greeting-card/context/vc-greeting-card-v0.0.jsonld\"\n      ],\n      id: \"https://example.com/credentials/1872\",\n      type: [\"VerifiableCredential\", \"GreetingCard\"],\n      issuer: didDoc.id,\n      issuanceDate: new Date().toISOString(),\n      credentialSubject: {\n        id: this.state.toDID\n      },\n      greetingCard: {\n        image: this.state.backgroundImage,\n        message: this.state.message,\n        from: this.state.issuerVerificationMethod,\n        to: this.state.toDID\n      }\n    };\n\n    const signedVC = await vc.issue({\n      credential,\n      suite,\n      documentLoader: wrappedDocumentLoader({\n        /// injectable document loader...\n      })\n    });\n\n    const asString = JSON.stringify(signedVC);\n    const asEncoded = base64url.encode(asString);\n    const asUrl = window.location.href + \"?vcgc=\" + asEncoded;\n    window.location.href = asUrl;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className={\"vc-greeting-card-options\"}>\n          <h3>From Private Key:</h3>\n          <input\n            value={this.state.privateKeyBase58}\n            onChange={event => {\n              this.setState({\n                privateKeyBase58: event.target.value\n              });\n            }}\n          />\n\n          <h3>From Public Key:</h3>\n\n          <input\n            value={this.state.publicKeyBase58}\n            onChange={event => {\n              const keyPair = new Ed25519KeyPair({\n                publicKeyBase58: event.target.value,\n                privateKeyBase58: this.state.privateKeyBase58\n              });\n\n              const didDoc = keyToDidDoc(keyPair);\n\n              this.setState({\n                publicKeyBase58: event.target.value,\n                issuerVerificationMethod: didDoc.id\n              });\n            }}\n          />\n\n          <h3>To DID:</h3>\n          <input\n            value={this.state.toDID}\n            onChange={event => {\n              this.setState({\n                toDID: event.target.value\n              });\n            }}\n          />\n\n          <h3>Message:</h3>\n          <input\n            value={this.state.message}\n            onChange={event => {\n              this.setState({\n                message: event.target.value\n              });\n            }}\n          />\n          <br />\n          <h3>Background: </h3>\n          <input\n            value={this.state.backgroundImage}\n            onChange={event => {\n              this.setState({\n                backgroundImage: event.target.value\n              });\n            }}\n          />\n          <br />\n          <h3>\n            <button onClick={this.convertCardToVC}>Get VC Greeting Card</button>\n          </h3>\n        </div>\n\n        <GreetingCardFromData\n          greetingCard={{\n            image: this.state.backgroundImage,\n            from: this.state.issuerVerificationMethod,\n            to: this.state.toDID,\n            message: this.state.message\n          }}\n        />\n      </React.Fragment>\n    );\n  }\n}\nexport default MakeCard;\n","import React from \"react\";\nimport base64url from \"base64url\";\nimport queryString from \"query-string\";\n\nimport GreetingCardFromData from \"../GreetingCardFromData/GreetingCardFromData\";\n\nimport { download } from \"../utils\";\nclass GreetingCardFromURL extends React.Component {\n  render() {\n    const decoded = JSON.parse(\n      base64url.decode(queryString.parse(window.location.search).vcgc)\n    );\n    return (\n      <React.Fragment>\n        <GreetingCardFromData greetingCard={decoded.greetingCard} />\n        <pre>{JSON.stringify(decoded, null, 2)}</pre>\n        <button\n          onClick={() => {\n            download(\"vc-greeting-card.json\", JSON.stringify(decoded, null, 2));\n          }}\n        >\n          Download\n        </button>\n      </React.Fragment>\n    );\n  }\n}\nexport default GreetingCardFromURL;\n","export const download = (filename, text) => {\n  const element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n","import React from \"react\";\nimport queryString from \"query-string\";\n\nimport MakeCard from \"./MakeCard/MakeCard\";\nimport GreetingCardFromURL from \"./GreetingCardFromURL/GreetingCardFromURL\";\n\nconst search = queryString.parse(window.location.search);\n\nclass App extends React.Component {\n  render() {\n    if (search.vcgc) {\n      return <GreetingCardFromURL />;\n    }\n    return (\n      <React.Fragment>\n        <MakeCard />\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}